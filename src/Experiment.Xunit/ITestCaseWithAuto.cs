[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1508:ClosingCurlyBracketsMustNotBePrecededByBlankLine", Justification = "The last line is generated by the code template.")]

namespace Jwc.Experiment.Xunit
{
    using System;

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    /// <typeparam name="T12">
    /// A type of the twelfth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    /// <typeparam name="T12">
    /// A type of the twelfth argument.
    /// </typeparam>
    /// <typeparam name="T13">
    /// A type of the thirteenth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    /// <typeparam name="T12">
    /// A type of the twelfth argument.
    /// </typeparam>
    /// <typeparam name="T13">
    /// A type of the thirteenth argument.
    /// </typeparam>
    /// <typeparam name="T14">
    /// A type of the fourteenth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    /// <typeparam name="T12">
    /// A type of the twelfth argument.
    /// </typeparam>
    /// <typeparam name="T13">
    /// A type of the thirteenth argument.
    /// </typeparam>
    /// <typeparam name="T14">
    /// A type of the fourteenth argument.
    /// </typeparam>
    /// <typeparam name="T15">
    /// A type of the fifteenth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> @delegate);
    }

    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
    /// <typeparam name="T1">
    /// A type of the first argument.
    /// </typeparam>
    /// <typeparam name="T2">
    /// A type of the second argument.
    /// </typeparam>
    /// <typeparam name="T3">
    /// A type of the third argument.
    /// </typeparam>
    /// <typeparam name="T4">
    /// A type of the fourth argument.
    /// </typeparam>
    /// <typeparam name="T5">
    /// A type of the fifth argument.
    /// </typeparam>
    /// <typeparam name="T6">
    /// A type of the sixth argument.
    /// </typeparam>
    /// <typeparam name="T7">
    /// A type of the seventh argument.
    /// </typeparam>
    /// <typeparam name="T8">
    /// A type of the eighth argument.
    /// </typeparam>
    /// <typeparam name="T9">
    /// A type of the ninth argument.
    /// </typeparam>
    /// <typeparam name="T10">
    /// A type of the tenth argument.
    /// </typeparam>
    /// <typeparam name="T11">
    /// A type of the eleventh argument.
    /// </typeparam>
    /// <typeparam name="T12">
    /// A type of the twelfth argument.
    /// </typeparam>
    /// <typeparam name="T13">
    /// A type of the thirteenth argument.
    /// </typeparam>
    /// <typeparam name="T14">
    /// A type of the fourteenth argument.
    /// </typeparam>
    /// <typeparam name="T15">
    /// A type of the fifteenth argument.
    /// </typeparam>
    /// <typeparam name="T16">
    /// A type of the sixteenth argument.
    /// </typeparam>
    public interface ITestCaseWithAuto<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegate">'
        /// A delegate representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase2 Create(Action<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> @delegate);
    }

}
