<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Import Namespace="System.Linq" #>
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1508:ClosingCurlyBracketsMustNotBePrecededByBlankLine", Justification = "The last line is generated by the code template.")]

namespace Jwc.Experiment.Xunit
{
    using System;

<#
for (var i = 1; i <= GenericTypeMax; i++)
{
    var typeList = GetGenericList(i, "T{0}");
#>
    /// <summary>
    /// Represents a test case with auto arguments.
    /// </summary>
<#
for (var j = 1; j <= i; j++)
{
#>
    /// <typeparam name="<#=string.Format("T{0}", j)#>">
    /// A type of the <#=ConvertToOrdinal(j)#> argument.
    /// </typeparam>
<#
}
#>
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1005:AvoidExcessiveParametersOnGenericTypes", Justification = "This rules is suppressed to pass many arguments to a test method.")]
    public interface ITestCaseWithAuto<<#=typeList#>> : IFluentInterface
    {
        /// <summary>
        /// Creates a test case with one argument.
        /// </summary>
        /// <param name="delegator">
        /// A delegator representing the actual test method.
        /// </param>
        /// <returns>
        /// The new test case.
        /// </returns>
        ITestCase Create(Action<<#=typeList#>> delegator);
    }

<#
}
#>
}
<#@ Include File="Helpers.tt" #>