<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Import Namespace="System.Linq" #>
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1508:ClosingCurlyBracketsMustNotBePrecededByBlankLine", Justification = "The last line is generated by the code template.")]

namespace Jwc.Experiment.Xunit
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// Represents test cases.
    /// </summary>
    public class TestCases
    {
<#
for (var i = 1; i <= GenericTypeMax; i++)
{
    var typeList = GetGenericList(i, "T{0}");
    var parameterList = GetGenericList(i, "IEnumerable<T{0}> args{0}");
    var argumentList = GetGenericList(i, "args{0}");
#>
        /// <summary>
        /// Returns test cases with arguments.
        /// </summary>
<#
for (var j = 1; j <= i; j++)
{
#>
        /// <typeparam name="<#=string.Format("T{0}", j)#>">
        /// A type of the <#=ConvertToOrdinal(j)#> arguments.
        /// </typeparam>
<#
}
#>
<#
for (var j = 1; j <= i; j++)
{
#>
        /// <param name="<#=string.Format("args{0}", j)#>">
        /// The <#=ConvertToOrdinal(j)#> arguments.
        /// </param>
<#
}
#>
        /// <returns>
        /// The new test cases with arguments.
        /// </returns>
        public static ITestCasesWithArgs<<#=typeList#>> WithArgs<<#=typeList#>>(<#=parameterList#>)
        {
            return new TestCasesWithArgs<<#=typeList#>>(<#=argumentList#>);
        }

<#
}
#>
    }
}
<#@ Include File="Helpers.tt" #>